1. Example Description 
    This application demonstrates the usage of the Clock_Ip Driver.
    The application include a S32DS project that configure Clock_Ip driver.
    1.1 The application software functionality:
        - Clock_Ip_Init, Clock_Ip_GetClockFrequency
            Initialize the clock sources, the clock tree and configure the clock gating of peripheral
            Initialize two clock configurations with different XBAR_CLK frequency: Clock_Ip_aClockConfig[0] with XBAR_CLK = 24Mhz and Clock_Ip_aClockConfig[1] with XBAR_CLK = 400Mhz.
            Using Clock_Ip_GetClockFrequency to check the frequency of XBAR_CLK after init clock.
2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - S32G-VNP-RDB3 (SCH-53060, Rev F), S32G3 silicon (Rev 1.1)
            - S32G-VNP-RDB3 (SCH-53060, Rev E1), S32G3 silicon (Rev 1.0)
        2.1.2 Connections
            - Powered board through power Adapter 12V
        2.1.3 Debugger
            The S32 Debug Probe must be connected to J48 JTAG Cortex Debug connector.
    2.2 Software installation
        Make sure that all RTD plugins are already installed in the S32DS plugins directory
3. How to run
    3.1 Importing the project into the workspace
        After opening S32 Design Studio, go to "File -> New -> S32DS Project From Example" and select "Clock_Ip_Example_S32G399A_M7". Then click on "Finish".
        The project should now be copied into you current workspace.
        Wait for the S32 Configuration was initialized and ready.
    3.2 Generating the S32 configuration
        The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
        The initial configuration will have the same settings as the default example settings.
        Right click on the current project, then click "S32 Configuration Tool" choose "Open Clocks".
        Pay attention to any error and warning message. If any configured value is invalid, they will be shown for user.
        Make the desired changes (if any) then click "Update Code".
    3.3 Building the project
        Select the configuration to be built: RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the build button in eclipse.
        Wait for the build action to be completed before continuing to the next step. Check the compiler console for error messages; upon completion, Clock_Ip_Example_S32G399A_M7.elf binary file
        should be created.
    3.4 Running the project
        Go to \b Run and select \b Debug Configurations. See in left side, left click to "Clock_Ip_Example_S32G399A_M7_Debug_RAM_S32Debug"
        Go to tab Debugger, select "Interface" to S32 Debug Probe - USB
        Select USB device connect to S32 Probe Debugger
        Click "Apply" to save the configuration.
        Click "Debug" to start debug the application.
        Use the controls to control the program flow.
